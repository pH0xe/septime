rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  	function isAdmin() {
    	return request.auth != null
      			&& get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

  	// Rules for querying/update user data
    match /users/{userId} {

    	// Allow an user to query its own information
    	allow get: if request.auth !=null && request.auth.uid == userId;

      // Allow an admin to query anyone
      allow get: if isAdmin();

      // Allow an Admin to query all users
      allow list: if isAdmin();

    	// Allow self-creation of a normal, inactive, non-admin account
    	allow create: if request.auth.uid == userId
      					&& request.resource.data.isAdmin == false
                && request.resource.data.isActive == false;

    	// Allow the user to update itself as long as he doesn't update isAdmin nor isActive
    	allow update: if request.auth.uid == userId
      					&& request.resource.data.isAdmin == resource.data.isAdmin
                && request.resource.data.isActive == resource.data.isActive;

      // Allow admins to update and delete whatever they want
      allow update, delete: if isAdmin();
    }

    match /equipments/{equipmentId} {
      // Allow an admin to query equipment
      allow get, list: if isAdmin();

      // Allow admins to create, update and delete whatever they want
      allow create, update, delete: if isAdmin();
    }

    match /equipmentsType/{equipmentTypeId} {
      // Allow an admin to query equipmentsType
      allow get, list: if isAdmin();

      // Allow admins to create, update and delete whatever they want
      allow create, update, delete: if isAdmin();
    }

     match /news/{newsID} {
      // Allow everybody to query news
      allow get, list: if true;

      // Allow admins to create, update and delete news
      allow create, update, delete: if isAdmin();
    }

     match /events/{evnetsID} {
      // Allow everybody to query events
      allow get, list: if true;

      // Allow admins to create, update and delete news
      allow create, update, delete: if isAdmin();
    }

    match /trainings/{trainingId} {

    	allow read: if true;
    	// allow every things to admin
      allow write: if isAdmin();
    }

    // Fallback, explicitly disallow everything else
    match /{document=**} {
    	allow read, write: if false;
    }
  }
}
